name: self-hosted-gpu-test
on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - master
      - main
  workflow_dispatch:
  schedule:
    # nightly tests
    - cron: "0 0 * * *"
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Try to start EC2 runner (a)
#       id: try-us-east-1a
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@main
#       continue-on-error: true
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-04d16a12bbc76ff0b
          ec2-instance-type: g4dn.xlarge
          subnet-id: subnet-0dee8543e12afe0cd # us-east-1a
          security-group-id: sg-0f9809618550edb98
          # iam-role-name: self-hosted-runner # optional, requires additional permissions
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
#      - name: Try to start EC2 runner (b)
#        id: try-us-east-1b
#        uses: machulav/ec2-github-runner@main
#        if: steps.try-us-east-1a.outcome == 'failure'
#        continue-on-error: true
#        with:
#          mode: start
#          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          ec2-image-id: ami-04d16a12bbc76ff0b
#          ec2-instance-type: g4dn.xlarge
#          subnet-id: subnet-0f75c34cf29bf0612 # us-east-1b
#          security-group-id: sg-0589e74ec03965add
#          # iam-role-name: self-hosted-runner # optional, requires additional permissions
#          aws-resource-tags: > # optional, requires additional permissions
#            [
#              {"Key": "Name", "Value": "ec2-github-runner"},
#              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
#            ]
#      - name: Try to start EC2 runner (c)
#        id: try-us-east-1c
#        uses: machulav/ec2-github-runner@main
#        if: steps.try-us-east-1b.outcome == 'failure'
#        continue-on-error: true
#        with:
#          mode: start
#          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          ec2-image-id: ami-04d16a12bbc76ff0b
#          ec2-instance-type: g4dn.xlarge
#          subnet-id: subnet-0965da20d48e6c4fb # us-east-1c
#          security-group-id: sg-0589e74ec03965add
#          # iam-role-name: self-hosted-runner # optional, requires additional permissions
#          aws-resource-tags: > # optional, requires additional permissions
#            [
#              {"Key": "Name", "Value": "ec2-github-runner"},
#              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
#            ]
#
#      - name: Try to start EC2 runner (d)
#        id: try-us-east-1d
#        uses: machulav/ec2-github-runner@main
#        if: steps.try-us-east-1c.outcome == 'failure'
#        continue-on-error: true
#        with:
#          mode: start
#          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          ec2-image-id: ami-04d16a12bbc76ff0b
#          ec2-instance-type: g4dn.xlarge
#          subnet-id: subnet-0e82552b8c708a999 # us-east-1d
#          security-group-id: sg-0589e74ec03965add
#          # iam-role-name: self-hosted-runner # optional, requires additional permissions
#          aws-resource-tags: > # optional, requires additional permissions
#            [
#              {"Key": "Name", "Value": "ec2-github-runner"},
#              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
#            ]
#      - name: Try to start EC2 runner (e)
#        id: try-us-east-1e
#        uses: machulav/ec2-github-runner@main
#        if: steps.try-us-east-1d.outcome == 'failure'
#        continue-on-error: true
#        with:
#          mode: start
#          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          ec2-image-id: ami-04d16a12bbc76ff0b
#          ec2-instance-type: g4dn.xlarge
#          subnet-id: subnet-0e6dc143f8d11cb20 # us-east-1e
#          security-group-id: sg-0589e74ec03965add
#          # iam-role-name: self-hosted-runner # optional, requires additional permissions
#          aws-resource-tags: > # optional, requires additional permissions
#            [
#              {"Key": "Name", "Value": "ec2-github-runner"},
#              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
#            ]
#      - name: Try to start EC2 runner (f)
#        id: try-us-east-1f
#        uses: machulav/ec2-github-runner@main
#        if: steps.try-us-east-1e.outcome == 'failure'
#        continue-on-error: true
#        with:
#          mode: start
#          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          ec2-image-id: ami-04d16a12bbc76ff0b
#          ec2-instance-type: g4dn.xlarge
#          subnet-id: subnet-0c81ebaea04d729a1 # us-east-1f
#          security-group-id: sg-0589e74ec03965add
#          # iam-role-name: self-hosted-runner # optional, requires additional permissions
#          aws-resource-tags: > # optional, requires additional permissions
#            [
#              {"Key": "Name", "Value": "ec2-github-runner"},
#              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
#            ]

#      - name: See if any of 6 sub-regions had the resource
#        id: start-ec2-runner
#        run: |
#          if [ "${{ steps.try-us-east-1a.outcome }}" = "success" ]; then
#            echo "::set-output name=label::${{ steps.try-us-east-1a.outputs.label }}"
#            echo "::set-output name=ec2-instance-id::${{ steps.try-us-east-1a.outputs.ec2-instance-id }}"
#          fi
#          if [ "${{ steps.try-us-east-1b.outcome }}" = "success" ]; then
#            echo "::set-output name=label::${{ steps.try-us-east-1b.outputs.label }}"
#            echo "::set-output name=ec2-instance-id::${{ steps.try-us-east-1b.outputs.ec2-instance-id }}"
#          fi
#          if [ "${{ steps.try-us-east-1c.outcome }}" = "success" ]; then
#            echo "::set-output name=label::${{ steps.try-us-east-1c.outputs.label }}"
#            echo "::set-output name=ec2-instance-id::${{ steps.try-us-east-1c.outputs.ec2-instance-id }}"
#          fi
#          if [ "${{ steps.try-us-east-1d.outcome }}" = "success" ]; then
#            echo "::set-output name=label::${{ steps.try-us-east-1d.outputs.label }}"
#            echo "::set-output name=ec2-instance-id::${{ steps.try-us-east-1d.outputs.ec2-instance-id }}"
#          fi
#          if [ "${{ steps.try-us-east-1e.outcome }}" = "success" ]; then
#            echo "::set-output name=label::${{ steps.try-us-east-1e.outputs.label }}"
#            echo "::set-output name=ec2-instance-id::${{ steps.try-us-east-1e.outputs.ec2-instance-id }}"
#          fi
#          if [ "${{ steps.try-us-east-1f.outcome }}" = "success" ]; then
#            echo "::set-output name=label::${{ steps.try-us-east-1f.outputs.label }}"
#            echo "::set-output name=ec2-instance-id::${{ steps.try-us-east-1f.outputs.ec2-instance-id }}"
#          fi

  do-the-job:
    name: Do the job on the runner
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    env:
      TEST_MODE: GPU
      OPENMM: ${{ matrix.cfg.openmm }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: mamba-org/provision-with-micromamba@main
        with:
          channels: conda-forge,openeye
          environment-file: devtools/conda-envs/test_env.yaml
          extra-specs: |
            python=3.9

      - name: Refine test env
        shell: bash -l {0}
        run: |
          micromamba install -y cudatoolkit==11.8 openmm>=8.0
      
      - name: Additional info about the build
        shell: bash -l {0}
        run: |
          uname -a
          df -h
          ulimit -a
          conda info -a
          conda list
          python -c "import openmm; print(openmm.Platform.getPluginLoadFailures())"
          python -m openmm.testInstallation

      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -v .

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: Decrypt OpenEye license
        shell: bash -l {0}
        env:
          OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
        run: |
          echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}
          python -c "import openeye; assert openeye.oechem.OEChemIsLicensed(), 'OpenEye license checks failed!'"

      - name: Test the package
        shell: bash -l {0}
        run: |
          export TRAVIS=true
          conda list --explicit
          pytest -v --cov-report xml --cov=perses --durations=0 -a "not advanced" -m "gpu_ci or gpu_needed" perses/tests

      - name: Codecov
        if: ${{ github.repository == 'choderalab/perses'
                && github.event != 'schedule' }}
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - do-the-job # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
