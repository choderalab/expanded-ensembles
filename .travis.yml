language: c
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
      #- g++
      #- gfortran
      #- valgrind
      #- csh
      #- g++-multilib
      #- gcc-multilib
branches:
  only:
    - master

install:
  - source devtools/travis-ci/install.sh
  - export PYTHONUNBUFFERED=true
  - export CC=gcc
  - export CXX=g++
  # Unpack encrypted OpenEye license file
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then openssl aes-256-cbc -K $encrypted_514505261e50_key -iv $encrypted_514505261e50_iv -in oe_license.txt.enc -out $OE_LICENSE -d; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == false ]; then echo "OpenEye license will not be installed in forks."; fi

script:
  - conda config --add channels ${ORGNAME}
  - conda build devtools/conda-recipe
  - source activate _test
  # Install test dependencies in test environment.
  - conda install --yes --quiet pip nose nose-timer
  #- pip install --upgrade pip
  - pip install $OPENEYE_CHANNEL openeye-toolkits
  # Fix openmm and parmed double dependencies
  #- conda remove --yes parmed parmed-dev && conda install --yes parmed-dev
  #- conda remove --yes openmm openmm-dev && conda install --yes openmm-dev
  # Run tests
  #- cd devtools && nosetests $PACKAGENAME --nocapture --verbosity=3 --with-doctest --with-timer && cd ..
  - cd devtools && nosetests $NOSETESTS --nocapture --verbosity=3 --with-doctest --with-timer && cd ..
env:
  matrix:
    # Allfast tests for python 2.7
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.testsystems perses.tests.utils"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.samplers"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="ValenceSmallMoleculeLibraryTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="T4LysozymeInhibitorsTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="KinaseInhibitorsTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="AlkanesTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="AlanineDipeptideTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="AblImatinibTestSystem"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.rjmc"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_topology_proposal"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_geometry_engine"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.bias"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.annihilation"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_ncmc_integrator"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_elimination"
    # Main tests for python 3.4
    # We skip slow tests.
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.testsystems perses.tests.utils"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.samplers"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="ValenceSmallMoleculeLibraryTestSystem"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.rjmc"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_topology_proposal"
    #- python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_geometry_engine"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.bias"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.annihilation"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_ncmc_integrator"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_elimination"

  global:
    - ORGNAME="omnia"
    - OE_LICENSE="$HOME/oe_license.txt"
    - PACKAGENAME="perses"
    # Location of decrypted OpenEye license file
    - OE_LICENSE="$HOME/oe_license.txt"
    - OPENEYE_CHANNEL="-i https://pypi.anaconda.org/openeye/channel/main/simple"
    # encrypted BINSTAR_TOKEN for push of dev package to binstar
    - secure: "RRvLDPu9mPoNaRWIseaJdgShOXI+PaHPWKAIJvW7VYWcAS6iEN7W4Fj4zD5hkocQxc3ou97EtkgID+ApH10bSGKxCykyU0urSY9jsSOJX2m0AE19X0dVr6ySIQkwCWE6kUMVlvQYQo80fM2EMElD+btr4G9XBAhArAO7HvZHkoQ="

after_success:
  - echo "after_success"
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then source devtools/travis-ci/after_success.sh; fi
