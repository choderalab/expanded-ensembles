language: c
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
      #- g++
      #- gfortran
      #- valgrind
      #- csh
      #- g++-multilib
      #- gcc-multilib
branches:
  only:
    - master

install:
  #add random sleep from 1-10s to try to prevent overloading the anaconda servers
  - sleep $[ ( $RANDOM % 10 )  + 1 ]s
  - source devtools/travis-ci/install.sh
  - export PYTHONUNBUFFERED=true
  - export CC=gcc
  - export CXX=g++
  # Unpack encrypted OpenEye license file
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then openssl aes-256-cbc -K $encrypted_e79f29b655ae_key -iv $encrypted_e79f29b655ae_iv -in devtools/travis-ci/oe_license.txt.enc -out $OE_LICENSE -d; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == false ]; then echo "OpenEye license will not be installed in forks."; fi

script:
  # Create a test environment
  - conda create --yes -n test python=$python
  # Activate the test environment
  - source activate test
  # Add org channel
  - conda config --add channels ${ORGNAME}
  # Add omnia dev channels
  - conda config --add channels https://conda.anaconda.org/omnia/label/dev
  # Install OpenEye toolkit
  - conda install --yes --quiet pip
  - pip install $OPENEYE_CHANNEL openeye-toolkits && python -c "import openeye; print(openeye.__version__)"
  # Build the recipe
  - conda build devtools/conda-recipe
  # Install the package
  - conda install --yes --use-local ${PACKAGENAME}-dev
  # Install testing dependencies
  - conda install --yes --quiet nose nose-timer
  # Run tests
  - cd devtools && nosetests $NOSETESTS --nocapture --verbosity=3 --with-timer && cd ..

env:
  matrix:
    # Allfast tests for python 2.7
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.storage perses.tests.test_storage"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.analysis perses.tests.test_analysis"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.testsystems perses.tests.utils"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.samplers"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="ValenceSmallMoleculeLibraryTestSystem"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="ImidazoleProtonationStateTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="T4LysozymeInhibitorsTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="KinaseInhibitorsTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="AlkanesTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="AlanineDipeptideTestSystem"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="AblImatinibTestSystem"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.rjmc"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_topology_proposal"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_geometry_engine"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.bias"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.annihilation"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_ncmc_integrator"
    - python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_elimination"
    # Main tests for python 3.4
    # We skip slow tests.
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.storage perses.tests.test_storage"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.analysis perses.tests.test_analysis"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.testsystems perses.tests.utils"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.samplers"
    #- python=2.7 CONDA_PY=27 NOSETESTS="perses.tests.test_samplers" TESTSYSTEMS="ValenceSmallMoleculeLibraryTestSystem"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.rjmc"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_topology_proposal"
    #- python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_geometry_engine"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.bias"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.annihilation"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_ncmc_integrator"
    - python=3.4 CONDA_PY=34 NOSETESTS="perses.tests.test_elimination"
    # Main tests for python 3.5
    # We skip slow tests.
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.storage perses.tests.test_storage"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.analysis perses.tests.test_analysis"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.tests.testsystems perses.tests.utils"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.samplers"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.rjmc"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.tests.test_topology_proposal"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.bias"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.annihilation"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.tests.test_ncmc_integrator"
    - python=3.5 CONDA_PY=35 NOSETESTS="perses.tests.test_elimination"

  global:
    - ORGNAME="omnia"
    - OE_LICENSE="$HOME/oe_license.txt"
    - PACKAGENAME="perses"
    # Location of decrypted OpenEye license file
    - OE_LICENSE="$HOME/oe_license.txt"
    - OPENEYE_CHANNEL="-i https://pypi.anaconda.org/OpenEye/simple"
    # encrypted BINSTAR_TOKEN for push of dev package to binstar
    - secure: "RRvLDPu9mPoNaRWIseaJdgShOXI+PaHPWKAIJvW7VYWcAS6iEN7W4Fj4zD5hkocQxc3ou97EtkgID+ApH10bSGKxCykyU0urSY9jsSOJX2m0AE19X0dVr6ySIQkwCWE6kUMVlvQYQo80fM2EMElD+btr4G9XBAhArAO7HvZHkoQ="

after_success:
  - echo "after_success"
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then source devtools/travis-ci/after_success.sh; fi
